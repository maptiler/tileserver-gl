name: 'Continuous Testing'

on:
  workflow_call:

permissions:
  checks: write
  contents: read

jobs:
  build-and-push-multiarch:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: amd64
            # Mark the amd64 job as the primary one for final tagging
            is_primary: true
          - os: ubuntu-22.04-arm64
            arch: arm64
            is_primary: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Get Git commit hash
        id: commit
        run: echo "::set-output name=sha_short::${GITHUB_SHA::8}"

      # Build individual architecture specific image
      - name: Build and Push ${{ matrix.arch }} Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          # Only build the architecture native to the runner
          platforms: linux/${{ matrix.arch }}
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:${{ steps.commit.outputs.sha_short }}-${{ matrix.arch }}
            ${{ env.DOCKER_IMAGE_NAME }}:latest-${{ matrix.arch }} # Specific tag for this arch

      # Conditionally create and push the multi-arch manifest (only on the primary OS)
      - name: Create and Push Multi-Arch Manifest
        # This step only runs on the primary OS (amd64 runner)
        if: matrix.is_primary
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          # Now build *all* platforms, ensuring the manifest list is created
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:${{ steps.commit.outputs.sha_short }} # Version tag
            ${{ env.DOCKER_IMAGE_NAME }}:latest # The main 'latest' tag
