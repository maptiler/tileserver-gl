name: 'Continuous Testing'

on:
  workflow_call:

permissions:
  checks: write
  contents: read

env:
  LOCAL_BASE_IMAGE_NAME: test-tileserver-gl
  LOCAL_LIGHT_IMAGE_NAME: test-tileserver-gl-light

jobs:
  # Test and build individual architecture images locally
  test_and_build_arch_images:
    name: Test and Build ${{ matrix.arch }} Image
    runs-on: ${{ matrix.runs-on }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-22.04
            arch: amd64
          - runs-on: ubuntu-22.04-arm
            arch: arm64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5  # Updated to v5 for consistency

      - name: Get OS Architecture
        run: uname -m

      - name: Setup node env ðŸ“¦
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          check-latest: true
          cache: 'npm'

      - name: Install NPM dependencies ðŸš€
        run: npm ci --prefer-offline --no-audit

      - name: Install system dependencies (Ubuntu) ðŸš€
        run: >-
          sudo apt-get update -qq && sudo apt-get install -qq libcairo2-dev libjpeg8-dev libpango1.0-dev
          libgif-dev build-essential g++ xvfb libgles2-mesa-dev libgbm-dev
          libxxf86vm-dev

      - name: Test NPM publish (dry-run)
        run: npm publish --dry-run

      - name: Pull test data ðŸ“¦
        run: >-
          wget -O test_data.zip
          https://github.com/maptiler/tileserver-gl/releases/download/v1.3.0/test_data.zip

      - name: Prepare test data ðŸ“¦
        run: unzip -q test_data.zip -d test_data

      - name: Run tests ðŸ§ª
        run: xvfb-run --server-args="-screen 0 1024x768x24" npm test

      - name: Remove test data
        run: rm -R test_data*

      # Docker Build Setup
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build Main Image
      - name: Build and tag ${{ matrix.arch }} main image locally
        id: build_main_arch
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/${{ matrix.arch }}
          tags: ${{ env.LOCAL_BASE_IMAGE_NAME }}:${{ matrix.arch }}
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Print main image info for ${{ matrix.arch }}
        run: |
          echo "Built and tagged main image locally for ${{ matrix.arch }} as ${{ env.LOCAL_BASE_IMAGE_NAME }}:${{ matrix.arch }}"
          echo "Main image digest for ${{ matrix.arch }}: ${{ steps.build_main_arch.outputs.digest }}"

      # Build Light Image
      - name: Create Tileserver Light Directory
        run: node publish.js --no-publish

      - name: Install Light NPM dependencies
        run: npm ci --prefer-offline --no-audit
        working-directory: ./light

      - name: Test Light NPM publish (dry-run)
        run: npm publish --dry-run
        working-directory: ./light

      - name: Build and tag ${{ matrix.arch }} light image locally
        id: build_light_arch
        uses: docker/build-push-action@v6
        with:
          context: ./light
          file: ./light/Dockerfile
          platforms: linux/${{ matrix.arch }}
          tags: ${{ env.LOCAL_LIGHT_IMAGE_NAME }}:${{ matrix.arch }}
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Print light image info for ${{ matrix.arch }}
        run: |
          echo "Built and tagged light image locally for ${{ matrix.arch }} as ${{ env.LOCAL_LIGHT_IMAGE_NAME }}:${{ matrix.arch }}"
          echo "Light image digest for ${{ matrix.arch }}: ${{ steps.build_light_arch.outputs.digest }}"
